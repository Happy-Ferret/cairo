// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Sat, 06 Jan 2018 19:12:26 EST.
// By https://git.io/c-for-go. DO NOT EDIT.

package pugl

/*
#cgo pkg-config: cairo
#include "pugl.h"
#include "cairo_gl.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import "unsafe"

// View as declared in pugl/pugl.h:58
type View C.PuglView

// NativeWindow type as declared in pugl/pugl.h:67
type NativeWindow int

// Handle type as declared in pugl/pugl.h:72
type Handle unsafe.Pointer

// EventAny as declared in pugl/pugl.h:185
type EventAny struct {
	Type           EventType
	View           []View
	Flags          uint32
	ref96eb2ebb    *C.PuglEventAny
	allocs96eb2ebb interface{}
}

// EventButton as declared in pugl/pugl.h:203
type EventButton struct {
	Type           EventType
	View           []View
	Flags          uint32
	Time           uint32
	X              float64
	Y              float64
	XRoot          float64
	YRoot          float64
	State          uint32
	Button         uint32
	ref72cc0df2    *C.PuglEventButton
	allocs72cc0df2 interface{}
}

// EventConfigure as declared in pugl/pugl.h:216
type EventConfigure struct {
	Type           EventType
	View           []View
	Flags          uint32
	X              float64
	Y              float64
	Width          float64
	Height         float64
	ref996e498a    *C.PuglEventConfigure
	allocs996e498a interface{}
}

// EventExpose as declared in pugl/pugl.h:230
type EventExpose struct {
	Type           EventType
	View           []View
	Flags          uint32
	X              float64
	Y              float64
	Width          float64
	Height         float64
	Count          int32
	ref79eda6e8    *C.PuglEventExpose
	allocs79eda6e8 interface{}
}

// EventClose as declared in pugl/pugl.h:239
type EventClose struct {
	Type           EventType
	View           []View
	Flags          uint32
	ref6b960563    *C.PuglEventClose
	allocs6b960563 interface{}
}

// EventKey as declared in pugl/pugl.h:277
type EventKey struct {
	Type           EventType
	View           []View
	Flags          uint32
	Time           uint32
	X              float64
	Y              float64
	XRoot          float64
	YRoot          float64
	State          uint32
	Keycode        uint32
	Character      uint32
	Special        Key
	Utf8           [8]byte
	Filter         int32
	ref788872a6    *C.PuglEventKey
	allocs788872a6 interface{}
}

// EventCrossing as declared in pugl/pugl.h:293
type EventCrossing struct {
	Type           EventType
	View           []View
	Flags          uint32
	Time           uint32
	X              float64
	Y              float64
	XRoot          float64
	YRoot          float64
	State          uint32
	Mode           CrossingMode
	reffcf6c399    *C.PuglEventCrossing
	allocsfcf6c399 interface{}
}

// EventMotion as declared in pugl/pugl.h:310
type EventMotion struct {
	Type           EventType
	View           []View
	Flags          uint32
	Time           uint32
	X              float64
	Y              float64
	XRoot          float64
	YRoot          float64
	State          uint32
	IsHint         int32
	Focus          int32
	refbd340027    *C.PuglEventMotion
	allocsbd340027 interface{}
}

// EventScroll as declared in pugl/pugl.h:333
type EventScroll struct {
	Type           EventType
	View           []View
	Flags          uint32
	Time           uint32
	X              float64
	Y              float64
	XRoot          float64
	YRoot          float64
	State          uint32
	Dx             float64
	Dy             float64
	refa5dd9f4c    *C.PuglEventScroll
	allocsa5dd9f4c interface{}
}

// EventFocus as declared in pugl/pugl.h:343
type EventFocus struct {
	Type           EventType
	View           []View
	Flags          uint32
	Grab           int32
	ref1a57ce4e    *C.PuglEventFocus
	allocs1a57ce4e interface{}
}

// Event as declared in pugl/pugl.h:364
const sizeofEvent = unsafe.Sizeof(C.PuglEvent{})

type Event [sizeofEvent]byte

// EventFunc type as declared in pugl/pugl.h:557
type EventFunc func(view *View, event *Event)

// CairoGL as declared in pugl/cairo_gl.h:30
type CairoGL struct {
	TextureId      uint32
	Buffer         []byte
	refdc99edd9    *C.PuglCairoGL
	allocsdc99edd9 interface{}
}
