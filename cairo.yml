--- 
GENERATOR: 
  PackageName: cairo
  PackageDescription: "Package cairo provides Go bindings for Cairo."
  PackageLicense: "THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS."
  PkgConfigOpts: [cairo]
  Includes: ["cairo.h"]

PARSER: 
  IncludePaths:
      - "/usr/include"
      - "cairo/"
  SourcesPaths: 
      - "cairo/cairo.h"
      - "cairo/platform_support.h"
  IgnoredPaths:
      - "cairo/cairo-deprecated.h"
  Defines:
    # CAIRO_HAS_QUARTZ_SURFACE: 1
TRANSLATOR: 
  ConstRules: 
    defines: expand
  MemTips:
      # - {target: "_get_feat$", self: raw}
  PtrTips:
    function:
      - {target: ".", tips: [ref,ref,ref,ref,ref,ref,ref]}
  Rules: 
    global: 
      - {transform: lower}
      - {action: accept, from: "(?i)^cairo_"}
      - {action: replace, from: "^cairo_t$", to: Cairo}
      - {action: replace, from: "^cairo_", to: _}
      - {transform: export}
    const:
      - {action: ignore, from: "cairo_get_font_extents$"}
      - {action: ignore, from: "cairo_get_status"}
    function:
      - {action: replace, from: "^_text_extents$", to: "_get_text_extents"}
      - {action: replace, from: "^_font_extents$", to: "_get_font_extents"}
      - {action: replace, from: "^_rectangle$", to: "_make_rectangle"}
      - {action: replace, from: "^_version$", to: "_get_version"}
      - {action: ignore, from: "cairo_surface_get_mime_data$"}
      - {action: replace, from: "^_status$", to: "_get_status"}
    type: 
      - {action: replace, from: "_t$"}
    private:
      - {transform: unexport}
    post-global: 
      - {action: replace, from: _$}
      - {load: snakecase}
